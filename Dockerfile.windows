# escape=`
FROM mcr.microsoft.com/powershell:nanoserver-1809 AS downloadnodejs
ENV NODE_VERSION 10.11.0
SHELL ["pwsh", "-Command", "$ErrorActionPreference = 'Stop';$ProgressPreference='silentlyContinue';"]
RUN Invoke-WebRequest -OutFile \"$($env:TEMP)\nodejs.zip\" -UseBasicParsing \"https://nodejs.org/dist/v$($env:NODE_VERSION)/node-v$($env:NODE_VERSION)-win-x64.zip\" ; `
Expand-Archive \"$($env:TEMP)\nodejs.zip\" -DestinationPath C:\ ; `
Rename-Item \"C:\node-v$($env:NODE_VERSION)-win-x64\" c:\nodejs

FROM mcr.microsoft.com/dotnet/core/sdk:3.1.102 AS build
COPY --from=downloadnodejs C:\nodejs C:\Windows\system32\
WORKDIR /app

# confirm installation
RUN node -v
RUN npm -v

# copy csproj and restore as distinct layers
COPY *.sln .
COPY Rnwood.Smtp4dev/*.csproj ./Rnwood.Smtp4dev/
RUN dotnet restore Rnwood.Smtp4dev

# copy everything else and build app
COPY /Rnwood.Smtp4dev/ClientApp /app/Rnwood.Smtp4dev/ClientApp
COPY /Rnwood.Smtp4dev/Rnwood.Smtp4dev.csproj /app/Rnwood.Smtp4dev
WORKDIR /app/Rnwood.Smtp4dev


RUN dotnet msbuild -p:Configuration=Release -t:NpmInstall -t:DebugRunNpm

COPY / /app

ARG version
ENV VERSION=$version
RUN echo Version is %VERSION%

RUN dotnet build --no-restore -c Release -p:SkipClientApp=true -p:Version=%VERSION%

FROM build AS publish
WORKDIR /app/Rnwood.Smtp4dev
RUN echo Version is %VERSION%
RUN dotnet publish --no-restore -c Release -o out -p:SkipClientApp=true -p:Version=%VERSION%


FROM mcr.microsoft.com/dotnet/core/aspnet:3.1.2 AS final
EXPOSE 80
WORKDIR /app
COPY --from=publish /app/Rnwood.Smtp4dev/out ./
ENTRYPOINT ["dotnet", "Rnwood.Smtp4dev.dll"]