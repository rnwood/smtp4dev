# escape=`
FROM mcr.microsoft.com/powershell:nanoserver-1809 AS downloadnodejs
ENV NODE_VERSION 10.11.0
SHELL ["pwsh", "-Command", "$ErrorActionPreference = 'Stop';$ProgressPreference='silentlyContinue';"]
RUN Invoke-WebRequest -OutFile nodejs.zip -UseBasicParsing "https://nodejs.org/dist/v$($env:NODE_VERSION)/node-v$($env:NODE_VERSION)-win-x64.zip"; `
RUN Expand-Archive nodejs.zip -DestinationPath C:\; `
RUN Rename-Item "C:\node-v$($env:NODE_VERSION)-win-x64" c:\nodejs

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1.2 AS base
WORKDIR /app
EXPOSE 80
COPY --from=downloadnodejs C:\nodejs\ C:\Windows\system32\

FROM mcr.microsoft.com/dotnet/core/sdk:3.1.102 AS build
COPY --from=downloadnodejs C:\nodejs\ C:\Windows\system32\
WORKDIR /app

# confirm installation
RUN node -v
RUN npm -v

# copy csproj and restore as distinct layers
COPY *.sln .
COPY Rnwood.Smtp4dev/*.csproj ./Rnwood.Smtp4dev/
RUN dotnet restore Rnwood.Smtp4dev

ARG version
ENV VERSION $version

# copy everything else and build app
COPY . .
WORKDIR /app/Rnwood.Smtp4dev
RUN dotnet build -p:Version=$VERSION
RUN dotnet test -p:Version=$VERSION

FROM build AS publish
WORKDIR /app/Rnwood.Smtp4dev
RUN dotnet publish -c Release -o out -p:Version=$VERSION


FROM base AS final
WORKDIR /app
COPY --from=publish /app/Rnwood.Smtp4dev/out ./
ENTRYPOINT ["dotnet", "Rnwood.Smtp4dev.dll"]