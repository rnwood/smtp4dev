<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rnwood.SmtpServer</name>
    </assembly>
    <members>
        <member name="T:Rnwood.SmtpServer.AbstractSession">
            <summary>
            Provides a base implementation for <see cref="T:Rnwood.SmtpServer.IEditableSession"/>
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.IEditableSession" />
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.#ctor(System.Net.IPAddress,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.AbstractSession"/> class.
            </summary>
            <param name="clientAddress">The client address.</param>
            <param name="startDate">The start date.</param>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.Authenticated">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.AuthenticationCredentials">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.ClientAddress">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.ClientName">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.CompletedNormally">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.EndDate">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.SecureConnection">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.SessionError">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.SessionErrorType">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.AbstractSession.StartDate">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.AddMessage(Rnwood.SmtpServer.IMessage)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.AppendToLog(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.GetLog">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.GetMessages">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.AbstractSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.ArgumentsParser">
            <summary>
            Parses SMTP command arguments into an array of arguments.
            Arguments are separated by spaces or are enclosed within &lt;&gt;s which may contain spaces and balanced &lt;&gt;s.
            Example:
            <code>&lt;Robert Wood&lt;rob@rnwood.co.uk&gt;&gt; ARG2 ARG3</code>
            Results in 3 arguments.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ArgumentsParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ArgumentsParser"/> class.
            </summary>
            <param name="text">The text to parse<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.ArgumentsParser.Arguments">
            <summary>
            Gets the arguments parsed from the text.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.ArgumentsParser.Text">
            <summary>
            Gets the Text which was parsed.
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding">
            <summary>
            An ASCII encoding where the highest order bit is zeroed.
            </summary>
            <seealso cref="T:System.Text.Encoding" />
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding" /> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>
            The number of bytes produced by encoding the specified characters.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The index at which to start writing the resulting sequence of bytes.</param>
            <returns>
            The actual number of bytes written into <paramref name="bytes">bytes</paramref>.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            The number of characters produced by decoding the specified sequence of bytes.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The index at which to start writing the resulting set of characters.</param>
            <returns>
            The actual number of characters written into <paramref name="chars">chars</paramref>.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>
            The maximum number of bytes produced by encoding the specified number of characters.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>
            The maximum number of characters produced by decoding the specified number of bytes.
            </returns>
        </member>
        <member name="P:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.DecodingFallback.MaxCharCount">
            <summary>
            Gets the maximum number of characters the current <see cref="T:System.Text.DecoderFallback"></see> object can return.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ASCIISevenBitTruncatingEncoding.DecodingFallback.CreateFallbackBuffer">
            <summary>
            Initializes a new instance of the <see cref="T:System.Text.DecoderFallbackBuffer"></see> class.
            </summary>
            <returns>
            An object that provides a fallback buffer for a decoder.
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.AsyncEventHandler`1">
            <summary>
            Represents an async event handler which accepts an <see cref="T:System.Object"/> parameter and a <typeparamref name="T"/> parameter and returns a <see cref="T:System.Threading.Tasks.Task"/>
            </summary>
            <typeparam name="T">The type of the second param.</typeparam>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
            <returns>A task representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.AuthenticationCredentialsValidationEventArgs">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.AuthenticationCredentialsValidationEventArgs" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.AuthenticationCredentialsValidationEventArgs.#ctor(Rnwood.SmtpServer.Extensions.Auth.IAuthenticationCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.AuthenticationCredentialsValidationEventArgs"/> class.
            </summary>
            <param name="credentials">The credentials<see cref="T:Rnwood.SmtpServer.Extensions.Auth.IAuthenticationCredentials"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.AuthenticationCredentialsValidationEventArgs.AuthenticationResult">
            <summary>
            Gets or sets the AuthenticationResult
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.AuthenticationCredentialsValidationEventArgs.Credentials">
            <summary>
            Gets the Credentials
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.BadBase64Exception">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.BadBase64Exception" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.BadBase64Exception.#ctor(Rnwood.SmtpServer.SmtpResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.BadBase64Exception"/> class.
            </summary>
            <param name="smtpResponse">The smtpResponse<see cref="T:Rnwood.SmtpServer.SmtpResponse"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.BadBase64Exception.#ctor(Rnwood.SmtpServer.SmtpResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.BadBase64Exception"/> class.
            </summary>
            <param name="smtpResponse">The smtpResponse<see cref="T:Rnwood.SmtpServer.SmtpResponse"/></param>
            <param name="innerException">The innerException<see cref="T:System.Exception"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.BadBase64Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.BadBase64Exception"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.BadBase64Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.BadBase64Exception"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.BadBase64Exception.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.BadBase64Exception"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.CloseNotifyingMemoryStream">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.CloseNotifyingMemoryStream" /> which is a memory stream that fires an event when disposed.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.CloseNotifyingMemoryStream.Closing">
            <summary>
            Occurs when the stream is disposed.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.CloseNotifyingMemoryStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryStream"></see> class and optionally releases the managed resources.
            </summary>
            <param name="disposing">The disposing<see cref="T:System.Boolean" /></param>
        </member>
        <member name="T:Rnwood.SmtpServer.CommandEventArgs">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.CommandEventArgs" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.CommandEventArgs.#ctor(Rnwood.SmtpServer.SmtpCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.CommandEventArgs"/> class.
            </summary>
            <param name="command">The command<see cref="T:Rnwood.SmtpServer.SmtpCommand"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.CommandEventArgs.Command">
            <summary>
            Gets the Command
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Connection">
            <summary>
            Represents a single SMTP server from a client to the server.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.#ctor(Rnwood.SmtpServer.ISmtpServer,Rnwood.SmtpServer.IEditableSession,Rnwood.SmtpServer.IConnectionChannel,Rnwood.SmtpServer.Verbs.IVerbMap,System.Func{Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.Extensions.IExtensionProcessor[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Connection"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="session">The session.</param>
            <param name="connectionChannel">The connection channel.</param>
            <param name="verbMap">The verb map.</param>
            <param name="extensionProcessors">The extension processors.</param>
        </member>
        <member name="E:Rnwood.SmtpServer.Connection.ConnectionClosedEventHandler">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.CurrentMessage">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.MailVerb">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.ReaderEncoding">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.Server">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.Session">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.VerbMap">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Connection.ExtensionProcessors">
            <summary>
            Gets a list of extensions which are available for this connection.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.AbortMessage">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.ApplyStreamFilter(System.Func{System.IO.Stream,System.Threading.Tasks.Task{System.IO.Stream}})">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.CloseConnection">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.CommitMessage">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.NewMessage">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.ReadLine">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.SetReaderEncoding(System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.SetReaderEncodingToDefault">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.WriteResponse(Rnwood.SmtpServer.SmtpResponse)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.Create(Rnwood.SmtpServer.ISmtpServer,Rnwood.SmtpServer.IConnectionChannel,Rnwood.SmtpServer.Verbs.IVerbMap)">
            <summary>
            Creates the a connection for the specified server and channel..
            </summary>
            <param name="server">The server.</param>
            <param name="connectionChannel">The connection channel.</param>
            <param name="verbMap">The verb map.</param>
            <returns>An <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.ProcessAsync">
            <summary>
            Starts processing of this connection.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Connection.WriteLineAndFlush(System.String,System.Object[])">
            <summary>
            Writes a line of text to the client.
            </summary>
            <param name="text">The text<see cref="T:System.String" /> optionally containing placeholders into which <paramref name="args" /> are subtituted using <see cref="M:System.String.Format(System.String,System.Object[])" /></param>
            <param name="args">The arguments which are formatted into <paramref name="text"/></param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.ConnectionEventArgs">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.ConnectionEventArgs" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ConnectionEventArgs.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ConnectionEventArgs"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.ConnectionEventArgs.Connection">
            <summary>
            Gets the Connection
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException"/> class.
            </summary>
            <param name="message">The message<see cref="T:System.String"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException"/> class.
            </summary>
            <param name="message">The message<see cref="T:System.String"/></param>
            <param name="innerException">The innerException<see cref="T:System.Exception"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.CurrentDateTimeProvider">
            <summary>
            Implements <see cref="T:Rnwood.SmtpServer.ICurrentDateTimeProvider"/> using the real local date time.
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.ICurrentDateTimeProvider" />
        </member>
        <member name="M:Rnwood.SmtpServer.CurrentDateTimeProvider.GetCurrentDateTime">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.DataAccessMode">
            <summary>
            Defines the DataAccessMode
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.DataAccessMode.ForReading">
            <summary>
            Defines the ForReading
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.DataAccessMode.ForWriting">
            <summary>
            Defines the ForWriting
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.DefaultServer">
            <summary>
            A default subclass of <see cref="T:Rnwood.SmtpServer.SmtpServer"/> which provides a default behaviour which is suitable for many simple
            applications.
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.SmtpServer" />
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServer.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServer" /> class.
            Initializes a new SMTP over SSL server on port 465 using the
            supplied SSL certificate.
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> remote collections are allowed.</param>
            <param name="sslCertificate">The SSL certificate to use for the server.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServer" /> class.
            Initializes a new SMTP server on port 25.
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> remote connections are allowed.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServer.#ctor(System.Boolean,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServer"/> class.
             Initializes a new SMTP server on the specified port number.
             </summary>
            
             <param name="allowRemoteConnections">if set to <c>true</c> remote connections are allowed.</param>
             <param name="portNumber">The port number.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServer.#ctor(System.Boolean,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)">
             <summary>
             Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServer"/> class.
             Initializes a new SMTP over SSL server on the specified port number
             using the supplied SSL certificate.
             </summary>
            
             <param name="allowRemoteConnections">if set to <c>true</c> remote connections are allowed.</param>
             <param name="portNumber">The port number.</param>
             <param name="sslCertificate">The SSL certificate.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServer.#ctor(System.Boolean,Rnwood.SmtpServer.StandardSmtpPort)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServer" /> class.
            Initializes a new SMTP over SSL server on the specified standard port number
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> connection from remote computers are allowed.</param>
            <param name="port">The standard port (or auto) to use.</param>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServer.AuthenticationCredentialsValidationRequiredEventHandler">
            <summary>
            Occurs when authentication results need to be validated.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServer.MessageCompletedEventHandler">
            <summary>
            Occurs when a mesage has been fully received but not yet acknlowledged by the server.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServer.MessageReceivedEventHandler">
            <summary>
            Occurs when a message has been receieved and acknlowledged by the server.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServer.SessionCompletedEventHandler">
            <summary>
            Occurs when a session is terminated.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServer.SessionStartedHandler">
            <summary>
            Occurs when a new session is started, when a new client connects to the server.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.DefaultServer.Behaviour">
            <summary>
            Gets the Behaviour.
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.DefaultServerBehaviour">
            <summary>
            Implements a default <see cref="T:Rnwood.SmtpServer.IServerBehaviour"/> which is suitable for many basic uses.
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.IServerBehaviour" />
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServerBehaviour"/> class.
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> remote connections to the server are allowed.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServerBehaviour"/> class.
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> remote connections to the server are allowed.</param>
            <param name="portNumber">The port number.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.#ctor(System.Boolean,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServerBehaviour"/> class.
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> remote connections to the server are allowed.</param>
            <param name="portNumber">The port number.</param>
            <param name="sslCertificate">The SSL certificate.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.DefaultServerBehaviour"/> class.
            </summary>
            <param name="allowRemoteConnections">if set to <c>true</c> remote connections to the server are allowed.</param>
            <param name="sslCertificate">The SSL certificate.</param>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServerBehaviour.AuthenticationCredentialsValidationRequiredAsync">
            <summary>
            Occurs when authentication credential provided by the client need to be validated.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServerBehaviour.CommandReceivedEventHandler">
            <summary>
            Occurs when a command is received from a client.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServerBehaviour.MessageCompletedEventHandler">
            <summary>
            Occurs when a message is received but not yet committed.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServerBehaviour.MessageReceivedEventHandler">
            <summary>
            Occurs when a message is received and committed.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServerBehaviour.SessionCompletedEventHandler">
            <summary>
            Occurs when a client session is closed.
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.DefaultServerBehaviour.SessionStartedEventHandler">
            <summary>
            Occurs when a new session is created, when a client connects to the server.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.DefaultServerBehaviour.DomainName">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.DefaultServerBehaviour.IpAddress">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.DefaultServerBehaviour.MaximumNumberOfSequentialBadCommands">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.DefaultServerBehaviour.PortNumber">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.GetDefaultEncoding(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.GetExtensions(Rnwood.SmtpServer.IConnectionChannel)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.GetMaximumMessageSize(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.GetReceiveTimeout(Rnwood.SmtpServer.IConnectionChannel)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.GetSendTimeout(Rnwood.SmtpServer.IConnectionChannel)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.GetSSLCertificate(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.IsAuthMechanismEnabled(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.IsSessionLoggingEnabled(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.IsSSLEnabled(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnCommandReceived(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnCreateNewMessage(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnCreateNewSession(Rnwood.SmtpServer.IConnectionChannel)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnMessageCompleted(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnMessageReceived(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.IMessage)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnMessageRecipientAdding(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.IMessageBuilder,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnMessageStart(Rnwood.SmtpServer.IConnection,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnSessionCompleted(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.ISession)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.OnSessionStarted(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.ISession)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DefaultServerBehaviour.ValidateAuthenticationCredentials(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.Extensions.Auth.IAuthenticationCredentials)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousAuthenticationCredentials">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousAuthenticationCredentials" />
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousAuthenticationRequest">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousAuthenticationRequest" />
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanism">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanism" /> which implements ANONYMOUS authentication.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanism.Identifier">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanism.IsPlainText">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanism.CreateAuthMechanismProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor.Credentials">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor.Connection">
            <summary>
            Gets the connection this processor is for.
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AnonymousMechanismProcessor.ProcessResponse(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AuthExtension">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthExtension" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthExtension.CreateExtensionProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc />
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor">
            <summary>
            Implements the AUTH extension for a connection.
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.Extensions.IExtensionProcessor" />
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor.connection">
            <summary>
            Defines the connection
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor.MechanismMap">
            <summary>
            Gets the mechanism map which manages the list of available auth mechasims.
            </summary>
            <value>
            The mechanism map.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor.GetEHLOKeywords">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor.IsMechanismEnabled(Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism)">
            <summary>
            Determines whether the specified auth mechanism is enabled for the current connection.
            </summary>
            <param name="mechanism">The mechanism.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation which yields true if enabled.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor.GetEnabledAuthMechanisms">
            <summary>
            Returns a sequence of all enabled auth mechanisms for the current connection.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismMap">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismMap" />
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismMap.map">
            <summary>
            Defines the map
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismMap.Add(Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism)">
            <summary>
            Adds an auth mechanism to the map.
            </summary>
            <param name="mechanism">The mechanism<see cref="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismMap.Get(System.String)">
            <summary>
            Gets the auth mechanism which has been registered for the given identifier.
            </summary>
            <param name="identifier">The identifier<see cref="T:System.String"/></param>
            <returns>The <see cref="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism"/></returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismMap.GetAll">
            <summary>
            Gets all registered auth mechanisms.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor.Connection">
            <summary>
            Gets the connection this processor is for
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor.Credentials">
            <inheritdoc />
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor.ProcessResponse(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessor.DecodeBase64(System.String)">
            <summary>
            Decodes a base64 encoded ASCII string and throws an exception if invalid.
            </summary>
            <param name="data">The data.</param>
            <returns>The decoded ASCII string</returns>
            <exception cref="T:Rnwood.SmtpServer.BadBase64Exception">If the base64 encoded string is invalid</exception>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessorStatus">
            <summary>
            Defines the AuthMechanismProcessorStatus
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessorStatus.Continue">
            <summary>
            Defines the Continue
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessorStatus.Failed">
            <summary>
            Defines the Failed
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.AuthMechanismProcessorStatus.Success">
            <summary>
            Defines the Success
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.AuthVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthVerb.#ctor(Rnwood.SmtpServer.Extensions.Auth.AuthExtensionProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.AuthVerb"/> class.
            </summary>
            <param name="authExtensionProcessor">The authExtensionProcessor<see cref="P:Rnwood.SmtpServer.Extensions.Auth.AuthVerb.AuthExtensionProcessor"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.AuthVerb.AuthExtensionProcessor">
            <summary>
            Gets the AuthExtensionProcessor
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.AuthVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials"/> class.
            </summary>
            <param name="username">The username<see cref="T:System.String"/></param>
            <param name="challenge">The challenge<see cref="T:System.String"/></param>
            <param name="challengeResponse">The challengeResponse<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials.Challenge">
            <summary>
            Gets the Challenge
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials.ChallengeResponse">
            <summary>
            Gets the ChallengeResponse
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials.Username">
            <summary>
            Gets the Username
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationCredentials.ValidateResponse(System.String)">
            <summary>
            Validates the response sent by the client against a password specified in clear text.
            </summary>
            <param name="password">The password<see cref="T:System.String" /></param>
            <returns>
            The <see cref="T:System.Boolean" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest"/> class.
            </summary>
            <param name="username">The username<see cref="T:System.String"/></param>
            <param name="challenge">The challenge<see cref="T:System.String"/></param>
            <param name="challengeResponse">The challengeResponse<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest.Challenge">
            <summary>
            Gets the Challenge
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest.ChallengeResponse">
            <summary>
            Gets the ChallengeResponse
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5AuthenticationRequest.Username">
            <summary>
            Gets the Username
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5Mechanism">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5Mechanism" /> implementing the CRAM-MD5 auth mechanism.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5Mechanism.Identifier">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.CramMd5Mechanism.IsPlainText">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5Mechanism.CreateAuthMechanismProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor" />
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.dateTimeProvider">
            <summary>
            Defines the dateTimeProvider
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.random">
            <summary>
            Defines the random
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.challenge">
            <summary>
            Defines the challenge
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.#ctor(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.IRandomIntegerGenerator,Rnwood.SmtpServer.ICurrentDateTimeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="random">The random<see cref="T:Rnwood.SmtpServer.IRandomIntegerGenerator"/></param>
            <param name="dateTimeProvider">The dateTimeProvider<see cref="T:Rnwood.SmtpServer.ICurrentDateTimeProvider"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.#ctor(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.IRandomIntegerGenerator,Rnwood.SmtpServer.ICurrentDateTimeProvider,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="random">The random<see cref="T:Rnwood.SmtpServer.IRandomIntegerGenerator"/></param>
            <param name="dateTimeProvider">The dateTimeProvider<see cref="T:Rnwood.SmtpServer.ICurrentDateTimeProvider"/></param>
            <param name="challenge">The challenge<see cref="T:System.String"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.States">
            <summary>
            Defines the States
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.States.Initial">
            <summary>
            Defines the Initial
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.States.AwaitingResponse">
            <summary>
            Defines the AwaitingResponse
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.CramMd5MechanismProcessor.ProcessResponse(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.IAuthenticationCredentials">
            <summary>
            Represents credentials supplied by the client.
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism" /> which implements a single authentication mechansim for the server.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism.Identifier">
            <summary>
            Gets the identifier for this AUTH mechanism as declared by the server in the EHELO response.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism.IsPlainText">
            <summary>
            Gets a value indicating whether credentials are sent using plain text.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism.CreateAuthMechanismProcessor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Creates an authentication mechanism processor for the provided connection.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection" /></param>
            <returns>
            The <see cref="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanismProcessor" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanismProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanismProcessor" /> which implements the state machine for a particular auth mechnism for a single client connection.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanismProcessor.Credentials">
            <summary>
            Gets the Credentials supplied during this authentication.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.IAuthMechanismProcessor.ProcessResponse(System.String)">
            <summary>
            Processes a response from the client and returns the result of the auth operation.
            </summary>
            <param name="data">The data<see cref="T:System.String" /></param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.LoginAuthenticationCredentials">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.LoginAuthenticationCredentials" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.LoginAuthenticationCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.LoginAuthenticationCredentials"/> class.
            </summary>
            <param name="username">The username<see cref="T:System.String"/></param>
            <param name="password">The password<see cref="T:System.String"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.LoginMechanism">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.LoginMechanism" /> implementing the plain text LOGIN auth mechanism.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.LoginMechanism.Identifier">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.LoginMechanism.IsPlainText">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.LoginMechanism.CreateAuthMechanismProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor" />
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.username">
            <summary>
            Defines the username
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.States">
            <summary>
            Defines the States
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.States.Initial">
            <summary>
            Defines the Initial
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.States.WaitingForUsername">
            <summary>
            Defines the WaitingForUsername
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.States.WaitingForPassword">
            <summary>
            Defines the WaitingForPassword
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.States.Completed">
            <summary>
            Defines the Completed
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.LoginMechanismProcessor.ProcessResponse(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.PlainAuthenticationCredentials">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.PlainAuthenticationCredentials" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.PlainAuthenticationCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.PlainAuthenticationCredentials"/> class.
            </summary>
            <param name="username">The username<see cref="T:System.String"/></param>
            <param name="password">The password<see cref="T:System.String"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.PlainMechanism">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.PlainMechanism" /> which implements the PLAIN auth mechnism.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.PlainMechanism.Identifier">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.PlainMechanism.IsPlainText">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.PlainMechanism.CreateAuthMechanismProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor.ProcessingState">
            <summary>
            Defines the States
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor.ProcessingState.Initial">
            <summary>
            Defines the Initial
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor.ProcessingState.AwaitingResponse">
            <summary>
            Defines the AwaitingResponse
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor.State">
            <summary>
            Gets or sets the State
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.PlainMechanismProcessor.ProcessResponse(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationCredentials">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationCredentials" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationCredentials"/> class.
            </summary>
            <param name="username">The username<see cref="T:System.String"/></param>
            <param name="password">The password<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationCredentials.Password">
            <summary>
            Gets the Password
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationCredentials.Username">
            <summary>
            Gets the Username
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationRequest">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationRequest" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationRequest"/> class.
            </summary>
            <param name="username">The username<see cref="T:System.String"/></param>
            <param name="password">The password<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationRequest.Password">
            <summary>
            Gets the Password
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.Auth.UsernameAndPasswordAuthenticationRequest.Username">
            <summary>
            Gets the Username
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.EightBitMimeDataVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.EightBitMimeDataVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeDataVerb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.EightBitMimeDataVerb"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeDataVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeDataVerb.SetParameter(Rnwood.SmtpServer.IConnection,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.EightBitMimeExtension">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.EightBitMimeExtension" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.EightBitMimeExtension"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.CreateExtensionProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.EightBitMimeExtensionProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.EightBitMimeExtensionProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.EightBitMimeExtensionProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.EightBitMimeExtensionProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.EightBitMimeExtension.EightBitMimeExtensionProcessor.GetEHLOKeywords">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.ExtensionProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.ExtensionProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.ExtensionProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.ExtensionProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.ExtensionProcessor.Connection">
            <summary>
            Gets the Connection
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.ExtensionProcessor.GetEHLOKeywords">
            <summary>
            Returns the EHLO keywords which advertise this extension to the client.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.IExtension">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.IExtension" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.IExtension.CreateExtensionProcessor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Creates the extension processor for a connection.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection" /></param>
            <returns>
            The <see cref="T:Rnwood.SmtpServer.Extensions.IExtensionProcessor" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.IExtensionProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.IExtensionProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.IExtensionProcessor.GetEHLOKeywords">
            <summary>
            Returns a sequence of EHLO keywords which are output to advertise the support for this extension to the client.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.SizeExtension">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.SizeExtension" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.SizeExtension.CreateExtensionProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor.Connection">
            <summary>
            Gets the connection this processor is for
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor.GetEHLOKeywords">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.SizeExtension.SizeExtensionProcessor.SetParameter(Rnwood.SmtpServer.IConnection,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.StartTlsExtension">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.StartTlsExtension" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.StartTlsExtension.CreateExtensionProcessor(Rnwood.SmtpServer.IConnection)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.StartTlsExtension.StartTlsExtensionProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.StartTlsExtension.StartTlsExtensionProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.StartTlsExtension.StartTlsExtensionProcessor.#ctor(Rnwood.SmtpServer.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Extensions.StartTlsExtension.StartTlsExtensionProcessor"/> class.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Extensions.StartTlsExtension.StartTlsExtensionProcessor.Connection">
            <summary>
            Gets the connection this processor is for
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.StartTlsExtension.StartTlsExtensionProcessor.GetEHLOKeywords">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Extensions.StartTlsVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Extensions.StartTlsVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Extensions.StartTlsVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.AuthenticationResult">
            <summary>
            Defines the AuthenticationResult
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.AuthenticationResult.Success">
            <summary>
            Defines the Success
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.AuthenticationResult.Failure">
            <summary>
            Defines the Failure
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.AuthenticationResult.TemporaryFailure">
            <summary>
            Defines the TemporaryFailure
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.FileMessage">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.FileMessage" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessage.#ctor(System.IO.FileInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.FileMessage"/> class.
            </summary>
            <param name="file">The file<see cref="T:System.IO.FileInfo"/></param>
            <param name="keepOnDispose">The keepOnDispose<see cref="T:System.Boolean"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.DeclaredMessageSize">
            <summary>
            Gets the DeclaredMessageSize
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.EightBitTransport">
            <summary>
            Gets a value indicating whether EightBitTransport
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.From">
            <summary>
            Gets the From
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.ReceivedDate">
            <summary>
            Gets the ReceivedDate
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.SecureConnection">
            <summary>
            Gets a value indicating whether SecureConnection
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.Session">
            <summary>
            Gets the Session
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.Recipients">
            <summary>
            Gets the To
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.File">
            <summary>
            Gets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessage.RecipientsList">
            <summary>
            Gets the recipients list.
            </summary>
            <value>
            The recipients list.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessage.GetData">
            <summary>
            Gets a stream which returns the message data.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessage.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.FileMessageBuilder">
            <summary>
            Implements a message builder which will build a <see cref="T:Rnwood.SmtpServer.FileMessage"/>
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.IMessageBuilder" />
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessageBuilder.#ctor(System.IO.FileInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.FileMessageBuilder"/> class.
            </summary>
            <param name="file">The file.</param>
            <param name="keepOnDispose">if set to <c>true</c> [keep on dispose].</param>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.DeclaredMessageSize">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.EightBitTransport">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.From">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.ReceivedDate">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.SecureConnection">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.Session">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.FileMessageBuilder.Recipients">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessageBuilder.GetData">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessageBuilder.ToMessage">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessageBuilder.WriteData">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessageBuilder.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.FileMessageBuilder.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.FileSession">
            <summary>
            Implements an <see cref="T:Rnwood.SmtpServer.ISession"/> where the session log is saved to a file.
            </summary>
            <seealso cref="T:Rnwood.SmtpServer.AbstractSession" />
        </member>
        <member name="M:Rnwood.SmtpServer.FileSession.#ctor(System.Net.IPAddress,System.DateTime,System.IO.FileInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.FileSession"/> class.
            </summary>
            <param name="clientAddress">The clientAddress<see cref="T:System.Net.IPAddress"/></param>
            <param name="startDate">The startDate<see cref="T:System.DateTime"/></param>
            <param name="file">The file<see cref="T:System.IO.FileInfo"/></param>
            <param name="keepOnDispose">The keepOnDispose<see cref="T:System.Boolean"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.FileSession.AppendToLog(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.FileSession.GetLog">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.FileSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.IConnection">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IConnection" />
            </summary>
        </member>
        <member name="E:Rnwood.SmtpServer.IConnection.ConnectionClosedEventHandler">
            <summary>
            Occurs when connection is closed.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.CurrentMessage">
            <summary>
            Gets the current message which has been started by the MAIL FROM command but not yet completed with
            a valid response from the server after the DATA command.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.ExtensionProcessors">
            <summary>
            Gets a list of extensions which are available for this connection.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.MailVerb">
            <summary>
            Gets the MailVerb
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.ReaderEncoding">
            <summary>
            Gets the ReaderEncoding
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.Server">
            <summary>
            Gets the Server
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.Session">
            <summary>
            Gets the Session
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnection.VerbMap">
            <summary>
            Gets the VerbMap
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.AbortMessage">
            <summary>
            Aborts the current message started by the MAIL FROM command.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.ApplyStreamFilter(System.Func{System.IO.Stream,System.Threading.Tasks.Task{System.IO.Stream}})">
            <summary>
            Applies a filter to the stream replacing the stream that this connection is reading/writing to with a new one. This method is used to implement TLS etc.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.CloseConnection">
            <summary>
            Closes the connection
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.CommitMessage">
            <summary>
            Commits the current message.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.NewMessage">
            <summary>
            Creates and returns a new message and sets it as the current message.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.ReadLine">
            <summary>
            Reads the next line from the client and returns it.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.SetReaderEncoding(System.Text.Encoding)">
            <summary>
            Sets the encoding used by this connection to decode text.
            </summary>
            <param name="encoding">The encoding<see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.SetReaderEncodingToDefault">
            <summary>
            Sets the encoding used by this connection to decode text to the default for the server.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnection.WriteResponse(Rnwood.SmtpServer.SmtpResponse)">
            <summary>
            Writes an <see cref="T:Rnwood.SmtpServer.SmtpResponse"/> to the client.
            </summary>
            <param name="response">The response<see cref="T:Rnwood.SmtpServer.SmtpResponse"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.IConnectionChannel">
            <summary>
            Represents a channel connecting the client and server.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="E:Rnwood.SmtpServer.IConnectionChannel.ClosedEventHandler">
            <summary>
            Occurs when the channel is closed.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnectionChannel.ClientIPAddress">
            <summary>
            Gets the client ip address.
            </summary>
            <value>
            The client ip address.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnectionChannel.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
              <c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnectionChannel.ReaderEncoding">
            <summary>
            Gets the current reader encoding used to read from channel and return string from the <see cref="M:Rnwood.SmtpServer.IConnectionChannel.ReadLine"/> method.
            </summary>
            <value>
            The reader encoding.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnectionChannel.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout after which if data is expected but not received, the connection will be terminated.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.IConnectionChannel.SendTimeout">
            <summary>
            Gets or sets the send timeout after which is data is being attempted to be sent but not completed, the connection will be terminated.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnectionChannel.ApplyStreamFilter(System.Func{System.IO.Stream,System.Threading.Tasks.Task{System.IO.Stream}})">
            <summary>
            Applies the a filter to the stream which is used to read data from the channel.
            </summary>
            <param name="filter">The filter.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnectionChannel.Close">
            <summary>
            Closes the channel and notifies users via the <see cref="E:Rnwood.SmtpServer.IConnectionChannel.ClosedEventHandler"/> event.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnectionChannel.Flush">
            <summary>
            Flushes outgoing data.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnectionChannel.ReadLine">
            <summary>
            Reads the next line from the channel using the currrent <see cref="P:Rnwood.SmtpServer.IConnectionChannel.ReaderEncoding"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnectionChannel.SetReaderEncoding(System.Text.Encoding)">
            <summary>
            Sets the encoding used by the <see cref="M:Rnwood.SmtpServer.IConnectionChannel.ReadLine"/> method to read lines from the channel.
            </summary>
            <param name="encoding">The encoding<see cref="T:System.Text.Encoding"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.IConnectionChannel.WriteLine(System.String)">
            <summary>
            Writes a line of text to the client.
            </summary>
            <param name="text">The text<see cref="T:System.String"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.ICurrentDateTimeProvider">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.ICurrentDateTimeProvider" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ICurrentDateTimeProvider.GetCurrentDateTime">
            <summary>
            Returns the current date and time.
            </summary>
            <returns>The <see cref="T:System.DateTime"/></returns>
        </member>
        <member name="T:Rnwood.SmtpServer.IEditableSession">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IEditableSession" />
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.Authenticated">
            <summary>
            Gets or sets a value indicating whether Authenticated
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.AuthenticationCredentials">
            <summary>
            Gets or sets the credentials used during authentication
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.ClientAddress">
            <summary>
            Gets or sets the client IP address
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.ClientName">
            <summary>
            Gets or sets the client name recevied in HELO or EHLO request.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.CompletedNormally">
            <summary>
            Gets or sets a value indicating whether the session completed without an error.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.EndDate">
            <summary>
            Gets or sets the date and time the session ended.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.SecureConnection">
            <summary>
            Gets or sets a value indicating whether a secure SSL/TLS channel was established.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.SessionError">
            <summary>
            Gets or sets
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.SessionErrorType">
            <summary>
            Gets or sets the SessionErrorType
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IEditableSession.StartDate">
            <summary>
            Gets or sets the StartDate
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.IEditableSession.AddMessage(Rnwood.SmtpServer.IMessage)">
            <summary>
            Adds a message to this session.
            </summary>
            <param name="message">The message<see cref="T:Rnwood.SmtpServer.IMessage"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.IEditableSession.AppendToLog(System.String)">
            <summary>
            Appends a line of text to the session log.
            </summary>
            <param name="text">The text<see cref="T:System.String"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.IMessage">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IMessage" />
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.DeclaredMessageSize">
            <summary>
            Gets the size of the message as declared by the client using the SIZE extension to the MAIL FROM command, or null if not specified by the client.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.EightBitTransport">
            <summary>
            Gets a value indicating whether the messaage was received over a 8-bit 'clean' connection using the 8BITMIME extension.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.From">
            <summary>
            Gets the sender of the message as specified by the client when sending MAIL FROM command.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.ReceivedDate">
            <summary>
            Gets the date the message was received by the server.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.SecureConnection">
            <summary>
            Gets a value indicating whether if message was received over a secure connection.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.Session">
            <summary>
            Gets the Session message was received on.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessage.Recipients">
            <summary>
            Gets the recipient of the message as specified by the client when sending RCPT TO command.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.IMessage.GetData">
            <summary>
            Gets a stream which returns the message data.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.IMessageBuilder">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IMessageBuilder" />
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.DeclaredMessageSize">
            <summary>
            Gets or sets the message size declared by the client using the SIZE extension.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.EightBitTransport">
            <summary>
            Gets or sets a value indicating whether the message was received over an 8-bit clean channel.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.From">
            <summary>
            Gets or sets the From
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.ReceivedDate">
            <summary>
            Gets or sets the date the message was received.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.SecureConnection">
            <summary>
            Gets or sets a value indicating whether the message is being received over a secure connection.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.Session">
            <summary>
            Gets or sets the Session this message is being received in.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IMessageBuilder.Recipients">
            <summary>
            Gets the recipients of the message as specified in the RCPT TO command.
            </summary>
            <value>
            The recipients.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.IMessageBuilder.GetData">
            <summary>
            Gets a read only stream containing the message data.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IMessageBuilder.ToMessage">
            <summary>
            Turns the editable messge into a read only message.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IMessageBuilder.WriteData">
            <summary>
            Returns a stream which can be used to write to the message data.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.IParameterProcessor">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IParameterProcessor" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.IParameterProcessor.SetParameter(Rnwood.SmtpServer.IConnection,System.String,System.String)">
            <summary>
            Processes the parameter which has the <paramref name="key"/> and <paramref name="value"/> specified.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="key">The key<see cref="T:System.String"/></param>
            <param name="value">The value<see cref="T:System.String"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.IRandomIntegerGenerator">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IRandomIntegerGenerator" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.IRandomIntegerGenerator.GenerateRandomInteger(System.Int32,System.Int32)">
            <summary>
            Generates a random integer in a specfied range.
            </summary>
            <param name="minValue">The minValue<see cref="T:System.Int32" /></param>
            <param name="maxValue">The maxValue<see cref="T:System.Int32" /></param>
            <returns>
            The <see cref="T:System.Int32" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.IServerBehaviour">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.IServerBehaviour" />
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IServerBehaviour.DomainName">
            <summary>
            Gets the DomainName
            Gets domain name reported by the server to clients.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IServerBehaviour.IpAddress">
            <summary>
            Gets the IP address on which to listen for connections.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IServerBehaviour.MaximumNumberOfSequentialBadCommands">
            <summary>
            Gets the max number of sequential bad commands before the client will be disconnected.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.IServerBehaviour.PortNumber">
            <summary>
            Gets the TCP port number on which to listen for connections.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.GetDefaultEncoding(Rnwood.SmtpServer.IConnection)">
            <summary>
            Gets the default encoding for the server which will be used for all new connections until overridden by an extension etc.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection" /></param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.GetExtensions(Rnwood.SmtpServer.IConnectionChannel)">
            <summary>
            Gets the extensions that should be enabled for the specified connection.
            </summary>
            <param name="connectionChannel">The connectionChannel<see cref="T:Rnwood.SmtpServer.IConnectionChannel" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> resulting in a sequence of <see cref="T:Rnwood.SmtpServer.Extensions.IExtension"/> for the extensions.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.GetMaximumMessageSize(Rnwood.SmtpServer.IConnection)">
            <summary>
            Gets the maximum allowed size of the message for the specified connection.
            </summary>
            <param name="connection">The connection.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.GetReceiveTimeout(Rnwood.SmtpServer.IConnectionChannel)">
            <summary>
            Gets the receive timeout that should be used for the specified connection.
            </summary>
            <param name="connectionChannel">The connection channel.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.GetSendTimeout(Rnwood.SmtpServer.IConnectionChannel)">
            <summary>
            Gets the send timeout that should be used for the specified connection.
            </summary>
            <param name="connectionChannel">The connectionChannel<see cref="T:Rnwood.SmtpServer.IConnectionChannel"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.GetSSLCertificate(Rnwood.SmtpServer.IConnection)">
            <summary>
            Gets the SSL certificate that should be used for the specified connection.
            </summary>
            <param name="connection">The connection.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.IsAuthMechanismEnabled(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.Extensions.Auth.IAuthMechanism)">
            <summary>
            Determines whether the speficied auth mechanism should be enabled for the specified connecton.
            </summary>
            <param name="connection">The connection.</param>
            <param name="authMechanism">The auth mechanism.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.IsSessionLoggingEnabled(Rnwood.SmtpServer.IConnection)">
            <summary>
            Gets a value indicating whether session logging should be enabled for the given connection.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.IsSSLEnabled(Rnwood.SmtpServer.IConnection)">
            <summary>
            Gets a value indicating whether to run in SSL mode.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection" /></param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnCommandReceived(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <summary>
            Called when a command received in the specified SMTP session.
            </summary>
            <param name="connection">The connection.</param>
            <param name="command">The command.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnCreateNewMessage(Rnwood.SmtpServer.IConnection)">
            <summary>
            Called when a new message is started using the MAIL FROM command and must returns the instance of <see cref="T:Rnwood.SmtpServer.IMessageBuilder"/> which will be used to record the message.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnCreateNewSession(Rnwood.SmtpServer.IConnectionChannel)">
            <summary>
            Called when a new session is started and must return an object which is used to record details about that session.
            </summary>
            <param name="connectionChannel">The connectionChannel<see cref="T:Rnwood.SmtpServer.IConnectionChannel"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnMessageCompleted(Rnwood.SmtpServer.IConnection)">
            <summary>
            Called when a message is received but not committed.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnMessageReceived(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.IMessage)">
            <summary>
            Called when a new message is received by the server.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="message">The message<see cref="T:Rnwood.SmtpServer.IMessage"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnMessageRecipientAdding(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.IMessageBuilder,System.String)">
            <summary>
            Called when a new recipient is requested for a message using the MAIL FROM command.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="message">The message<see cref="T:Rnwood.SmtpServer.IMessageBuilder"/></param>
            <param name="recipient">The recipient<see cref="T:System.String"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnMessageStart(Rnwood.SmtpServer.IConnection,System.String)">
            <summary>
            Called when a new message is started in the specified session.
            </summary>
            <param name="connection">The connection.</param>
            <param name="from">From.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnSessionCompleted(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.ISession)">
            <summary>
            Called when a SMTP session is completed.
            </summary>
            <param name="connection">The connection.</param>
            <param name="session">The session.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.OnSessionStarted(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.ISession)">
            <summary>
            Called when a new SMTP session is started.
            </summary>
            <param name="connection">The connection.</param>
            <param name="session">The session.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.IServerBehaviour.ValidateAuthenticationCredentials(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.Extensions.Auth.IAuthenticationCredentials)">
            <summary>
            Validates the authentication request to determine if the supplied details
            are correct.
            </summary>
            <param name="connection">The connection.</param>
            <param name="authenticationRequest">The authentication request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the async operation.</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.ISession">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.ISession" />
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.Authenticated">
            <summary>
            Gets a value indicating whether this the client provided authentication.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.AuthenticationCredentials">
            <summary>
            Gets the AuthenticationCredentials
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.ClientAddress">
            <summary>
            Gets the IP address of the client that established this session.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.ClientName">
            <summary>
            Gets the ClientName
            Gets or sets the name of the client as reported in its HELO/EHLO command
            or null.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.CompletedNormally">
            <summary>
            Gets a value indicating whether this <see cref="T:Rnwood.SmtpServer.AbstractSession"/> completed normally (by the client issuing a QUIT command)
            as opposed to abormal termination such as a connection timeout or unhandled errors in the server.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.EndDate">
            <summary>
            Gets the date the session ended.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.SecureConnection">
            <summary>
            Gets a value indicating whether the session is over a secure connection.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.SessionError">
            <summary>
            Gets the error that caused the session to terminate if it didn't complete normally.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.SessionErrorType">
            <summary>
            Gets a classification of the type of error which was experienced.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISession.StartDate">
            <summary>
            Gets the date the session started.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ISession.GetLog">
            <summary>
            Gets the session log (all communication between the client and server)
            if session logging is enabled.
            </summary>
            <returns>A <see cref="T:System.IO.TextReader"/> which will read from the session log.</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ISession.GetMessages">
            <summary>
            Gets list of messages recevied in this session.
            </summary>
            <returns>A read only list of messages</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.ISmtpServer">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.ISmtpServer" />
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.ISmtpServer.Behaviour">
            <summary>
            Gets the Behaviour
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Logging">
            <summary>
            Helper class implementing logging
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Logging.Factory">
            <summary>
            Gets the logging factory.
            </summary>
            <value>
            The factory.
            </value>
        </member>
        <member name="T:Rnwood.SmtpServer.MemoryMessage">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.MemoryMessage" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MemoryMessage"/> class.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.DeclaredMessageSize">
            <summary>
            Gets the DeclaredMessageSize
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.EightBitTransport">
            <summary>
            Gets a value indicating whether EightBitTransport
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.From">
            <summary>
            Gets the From
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.ReceivedDate">
            <summary>
            Gets the ReceivedDate
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.SecureConnection">
            <summary>
            Gets a value indicating whether if message was received over a secure connection.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.Session">
            <summary>
            Gets the Session message was received on.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.Recipients">
            <summary>
            Gets the recipient of the message as specified by the client when sending RCPT TO command.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.Data">
            <summary>
            Gets or sets the message data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessage.RecipientsList">
            <summary>
            Gets the recipients list.
            </summary>
            <value>
            The recipients list.
            </value>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessage.GetData">
            <summary>
            Gets a stream which returns the message data.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessage.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.MemoryMessageBuilder">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.MemoryMessageBuilder" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MemoryMessageBuilder"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.#ctor(Rnwood.SmtpServer.MemoryMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MemoryMessageBuilder"/> class.
            </summary>
            <param name="message">The message<see cref="T:Rnwood.SmtpServer.MemoryMessage"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.DeclaredMessageSize">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.EightBitTransport">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.From">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.ReceivedDate">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.SecureConnection">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.Session">
            <inheritdoc/>
        </member>
        <member name="P:Rnwood.SmtpServer.MemoryMessageBuilder.Recipients">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.GetData">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.ToMessage">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.WriteData">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MemoryMessageBuilder.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.MemorySession">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.MemorySession" />
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.MemorySession.log">
            <summary>
            Defines the log
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MemorySession.#ctor(System.Net.IPAddress,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MemorySession"/> class.
            </summary>
            <param name="clientAddress">The clientAddress<see cref="T:System.Net.IPAddress"/></param>
            <param name="startDate">The startDate<see cref="T:System.DateTime"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.MemorySession.AppendToLog(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Rnwood.SmtpServer.MemorySession.GetLog">
            <inheritdoc />
        </member>
        <member name="M:Rnwood.SmtpServer.MemorySession.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Rnwood.SmtpServer.MessageEventArgs">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.MessageEventArgs" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MessageEventArgs.#ctor(Rnwood.SmtpServer.IMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MessageEventArgs"/> class.
            </summary>
            <param name="message">The message<see cref="T:Rnwood.SmtpServer.IMessage"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.MessageEventArgs.Message">
            <summary>
            Gets the Message
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.Parameter">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Parameter" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Parameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Parameter"/> class.
            </summary>
            <param name="name">The name<see cref="T:System.String"/></param>
            <param name="value">The value<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Parameter.Name">
            <summary>
            Gets the Name
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.Parameter.Value">
            <summary>
            Gets the Value
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Parameter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The obj<see cref="T:System.Object" /></param>
            <returns>
            The <see cref="T:System.Boolean" />
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Parameter.Equals(Rnwood.SmtpServer.Parameter)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">The other<see cref="T:Rnwood.SmtpServer.Parameter" /></param>
            <returns>
            The <see cref="T:System.Boolean" />
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Parameter.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            The <see cref="T:System.Int32" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.ParameterParser">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.ParameterParser" /> which implements parsing of A=1 B=2 type string for command parameters.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ParameterParser.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.ParameterParser"/> class.
            </summary>
            <param name="arguments">The arguments<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.ParameterParser.Parameters">
            <summary>
            Gets the parameters which have been parsed from the arguments.
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.ParameterProcessorMap">
            <summary>
            Manages a set of processors which know how to manage the processing of parameter values
            and handles dispatching of parameter values to them when a new command is received.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.ParameterProcessorMap.GetProcessor(System.String)">
            <summary>
            Gets the processor which is registered for the parameter with the given <paramref name="key"/>
            or null if none is found.
            </summary>
            <param name="key">The key<see cref="T:System.String"/></param>
            <returns>The <see cref="T:Rnwood.SmtpServer.IParameterProcessor"/> or null</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ParameterProcessorMap.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.ParameterParser,System.Boolean)">
            <summary>
            Processes a set of parameters using the registered processors.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="parameters">The parameters<see cref="T:Rnwood.SmtpServer.ParameterParser"/></param>
            <param name="throwOnUnknownParameter">The throwOnUnknownParameter<see cref="T:System.Boolean"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ParameterProcessorMap.Process(Rnwood.SmtpServer.IConnection,System.String[],System.Boolean)">
            <summary>
            Processes a set of parameters using the registered processors.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="arguments">The arguments<see cref="T:System.String"/></param>
            <param name="throwOnUnknownParameter">The throwOnUnknownParameter<see cref="T:System.Boolean"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.ParameterProcessorMap.SetProcessor(System.String,Rnwood.SmtpServer.IParameterProcessor)">
            <summary>
            Sets the processor instance which will process the parameter with the given <paramref name="key"/>
            </summary>
            <param name="key">The key<see cref="T:System.String"/></param>
            <param name="processor">The processor<see cref="T:Rnwood.SmtpServer.IParameterProcessor"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.RandomIntegerGenerator">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.RandomIntegerGenerator" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.RandomIntegerGenerator.GenerateRandomInteger(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.ServerStopBehaviour">
            <summary>
            Defines the ServerStopBehaviour
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.ServerStopBehaviour.WaitForExistingConnections">
            <summary>
            Defines the WaitForExistingConnections
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.ServerStopBehaviour.KillExistingConnections">
            <summary>
            Defines the KillExistingConnections
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.SessionErrorType">
            <summary>
            A high level classification of common session termination errors.
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SessionErrorType.None">
            <summary>
            Indicates that there was no error.
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SessionErrorType.NetworkError">
            <summary>
            Indicates a network/IO error such as connection timeout or aborted connection.
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SessionErrorType.UnexpectedException">
            <summary>
            Indicates an unhandled exception in the server or an extension which caused the connection to be terminated.
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SessionErrorType.ServerShutdown">
            <summary>
            Indicates the connection was terminated because the server was shut down.
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.SessionEventArgs">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.SessionEventArgs" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SessionEventArgs.#ctor(Rnwood.SmtpServer.ISession)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SessionEventArgs"/> class.
            </summary>
            <param name="session">The session<see cref="T:Rnwood.SmtpServer.ISession"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.SessionEventArgs.Session">
            <summary>
            Gets the Session
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.SmtpCommand">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.SmtpCommand" /> which implements parsing of an SMTP command received from client to server.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpCommand"/> class.
            </summary>
            <param name="text">The text<see cref="T:System.String"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpCommand.ArgumentsText">
            <summary>
            Gets the arguments supplied after the VERB in the command as a single string.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpCommand.IsEmpty">
            <summary>
            Gets a value indicating whether IsEmpty
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpCommand.IsValid">
            <summary>
            Gets a value indicating whether this command is valid - i.e. matching the pattern allowed.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpCommand.Text">
            <summary>
            Gets the Text
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpCommand.Verb">
            <summary>
            Gets the Verb
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpCommand.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The obj<see cref="T:System.Object" /></param>
            <returns>
            The <see cref="T:System.Boolean" />
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpCommand.Equals(Rnwood.SmtpServer.SmtpCommand)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">The other<see cref="T:Rnwood.SmtpServer.SmtpCommand" /></param>
            <returns>
            The <see cref="T:System.Boolean" />
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpCommand.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            The <see cref="T:System.Int32" />
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.SmtpResponse">
            <summary>
            Represents a SMTP response from server to client which is represented by a numeric code an optional descriptive text.
            </summary>
            <seealso cref="T:System.IEquatable`1" />
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpResponse.#ctor(System.Int32,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpResponse" /> class using any code represented as a number.
            </summary>
            <param name="code">The code.</param>
            <param name="messageFormatString">The message format string. Including placeholders where <paramref name="args"/> will be substituted in.</param>
            <param name="args">The arguments used to fill in placeholders in <paramref name="messageFormatString"/>.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpResponse.#ctor(Rnwood.SmtpServer.StandardSmtpResponseCode,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpResponse"/> class using an enum of standard responses.
            </summary>
            <param name="code">The code.</param>
            <param name="messageFormatString">The message format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpResponse.Code">
            <summary>
            Gets the Code
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpResponse.IsError">
            <summary>
            Gets a value indicating whether this response represents an error.
            Error responses have a <see cref="P:Rnwood.SmtpServer.SmtpResponse.Code"/> in the range 500-599.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpResponse.IsSuccess">
            <summary>
            Gets a value indicating whether this response represent success.
            Successful responses have a <see cref="P:Rnwood.SmtpServer.SmtpResponse.Code"/> in the range 200-299.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpResponse.Message">
            <summary>
            Gets the Message
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpResponse.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            Objects are equal if they are both instances of <see cref="T:Rnwood.SmtpServer.SmtpResponse"/> and  have the same <see cref="P:Rnwood.SmtpServer.SmtpResponse.Code"/> and <see cref="P:Rnwood.SmtpServer.SmtpResponse.Message"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpResponse.Equals(Rnwood.SmtpServer.SmtpResponse)">
            <summary>
            Indicates whether the current response is equal to another. Both message and code must be equal.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpResponse.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the response.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the response.</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.SmtpServer">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.SmtpServer" />
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.activeConnections">
            <summary>
            Defines the activeConnections
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.logger">
            <summary>
            Defines the logger
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.nextConnectionEvent">
            <summary>
            Defines the nextConnectionEvent
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.coreTask">
            <summary>
            Defines the coreTask
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.disposedValue">
            <summary>
            Defines the disposedValue
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.isRunning">
            <summary>
            Defines the isRunning
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.SmtpServer.listener">
            <summary>
            Defines the listener
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.#ctor(Rnwood.SmtpServer.IServerBehaviour)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpServer"/> class.
            </summary>
            <param name="behaviour">The behaviour<see cref="T:Rnwood.SmtpServer.IServerBehaviour"/></param>
        </member>
        <member name="E:Rnwood.SmtpServer.SmtpServer.IsRunningChanged">
            <summary>
            Defines the IsRunningChanged
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpServer.ActiveConnections">
            <summary>
            Gets the ActiveConnections
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpServer.Behaviour">
            <summary>
            Gets the Behaviour
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpServer.IsRunning">
            <summary>
            Gets a value indicating whether IsRunning
            Gets or sets a value indicating whether the server is currently running.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpServer.PortNumber">
            <summary>
            Gets the PortNumber
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.KillConnections">
            <summary>
            Kills all client connections.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.Start">
            <summary>
            Runs the server asynchronously. This method returns once the server has been started.
            To stop the server call the <see cref="M:Rnwood.SmtpServer.SmtpServer.Stop"/> method.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.Stop">
            <summary>
            Stops the running server. Any existing connections are terminated.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.Stop(System.Boolean)">
            <summary>
            Stops the running server.
            This method blocks until all connections have terminated, either by normal completion or timeout,
            or if <paramref name="killConnections"/> has been specified then once all of the threads
            have been killed.
            </summary>
            <param name="killConnections">True if existing connections should be terminated.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.WaitForNextConnection">
            <summary>
            Waits for the next client to connect and blocks until then.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">The disposing<see cref="T:System.Boolean" /></param>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServer.CreateVerbMap">
            <summary>
            Creates the verb map which represent the commands implemented by the server.
            </summary>
            <returns>The <see cref="T:Rnwood.SmtpServer.Verbs.IVerbMap"/> with registered verbs for the commands.</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.SmtpServerException">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.SmtpServerException" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServerException.#ctor(Rnwood.SmtpServer.SmtpResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpServerException"/> class.
            </summary>
            <param name="smtpResponse">The smtpResponse<see cref="P:Rnwood.SmtpServer.SmtpServerException.SmtpResponse"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServerException.#ctor(Rnwood.SmtpServer.SmtpResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpServerException"/> class.
            </summary>
            <param name="smtpResponse">The smtpResponse<see cref="P:Rnwood.SmtpServer.SmtpServerException.SmtpResponse"/></param>
            <param name="innerException">The innerException<see cref="T:System.Exception"/></param>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpServerException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpServerException"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.SmtpServerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.SmtpServerException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Rnwood.SmtpServer.SmtpServerException.SmtpResponse">
            <summary>
            Gets the SmtpResponse
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.StandardSmtpPort">
            <summary>
            Enumeration of the different standard TCP ports that the server can listen on
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpPort.AssignAutomatically">
            <summary>
            Select a free port number automatically
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpPort.SMTP">
            <summary>
            Use the standard IANA SMTP port - 25
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpPort.SMTPOverSSL">
            <summary>
            Use the standard IANA SMTP-over-SSL port - 465
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.StandardSmtpResponseCode">
            <summary>
            Defines the StandardSmtpResponseCode
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.SyntaxErrorCommandUnrecognised">
            <summary>
            Defines the SyntaxErrorCommandUnrecognised
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.SyntaxErrorInCommandArguments">
            <summary>
            Defines the SyntaxErrorInCommandArguments
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.CommandNotImplemented">
            <summary>
            Defines the CommandNotImplemented
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.BadSequenceOfCommands">
            <summary>
            Defines the BadSequenceOfCommands
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.CommandParameterNotImplemented">
            <summary>
            Defines the CommandParameterNotImplemented
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.ExceededStorageAllocation">
            <summary>
            Defines the ExceededStorageAllocation
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.AuthenticationFailure">
            <summary>
            Defines the AuthenticationFailure
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.AuthenticationRequired">
            <summary>
            Defines the AuthenticationRequired
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.RecipientRejected">
            <summary>
            Defines the RecipientRejected
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.TransactionFailed">
            <summary>
            Defines the TransactionFailed
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.SystemStatusOrHelpReply">
            <summary>
            Defines the SystemStatusOrHelpReply
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.HelpMessage">
            <summary>
            Defines the HelpMessage
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.ServiceReady">
            <summary>
            Defines the ServiceReady
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.ClosingTransmissionChannel">
            <summary>
            Defines the ClosingTransmissionChannel
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.OK">
            <summary>
            Defines the OK
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.UserNotLocalWillForwardTo">
            <summary>
            Defines the UserNotLocalWillForwardTo
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.StartMailInputEndWithDot">
            <summary>
            Defines the StartMailInputEndWithDot
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.AuthenticationContinue">
            <summary>
            Defines the AuthenticationContinue
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.StandardSmtpResponseCode.AuthenticationOK">
            <summary>
            Defines the AuthenticationOK
            </summary>
        </member>
        <member name="T:Rnwood.SmtpServer.TcpClientConnectionChannel">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.TcpClientConnectionChannel" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.TcpClientConnectionChannel"/> class.
            </summary>
            <param name="tcpClient">The tcpClient<see cref="T:System.Net.Sockets.TcpClient"/></param>
        </member>
        <member name="E:Rnwood.SmtpServer.TcpClientConnectionChannel.ClosedEventHandler">
            <summary>
            Defines the Closed
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.TcpClientConnectionChannel.ClientIPAddress">
            <summary>
            Gets the ClientIPAddress
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.TcpClientConnectionChannel.IsConnected">
            <summary>
            Gets a value indicating whether IsConnected
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.TcpClientConnectionChannel.ReaderEncoding">
            <summary>
            Gets the ReaderEncoding
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.TcpClientConnectionChannel.ReceiveTimeout">
            <summary>
            Gets or sets the ReceiveTimeout
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.TcpClientConnectionChannel.SendTimeout">
            <summary>
            Gets or sets the SendTimeout
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.ApplyStreamFilter(System.Func{System.IO.Stream,System.Threading.Tasks.Task{System.IO.Stream}})">
            <summary>
            Applies the a filter to the stream which is used to read data from the channel.
            </summary>
            <param name="filter">The filter.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.Close">
            <summary>
            Closes the channel and notifies users via the <see cref="E:Rnwood.SmtpServer.TcpClientConnectionChannel.ClosedEventHandler" /> event.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.Flush">
            <summary>
            Flushes outgoing data.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.ReadLine">
            <summary>
            Reads the next line from the channel using the currrent <see cref="P:Rnwood.SmtpServer.TcpClientConnectionChannel.ReaderEncoding" />
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation
            </returns>
            <exception cref="T:System.IO.IOException">Reader returned null string</exception>
            <exception cref="T:Rnwood.SmtpServer.ConnectionUnexpectedlyClosedException">Read failed</exception>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.SetReaderEncoding(System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.WriteLine(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.TcpClientConnectionChannel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Rnwood.SmtpServer.DataVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.DataVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.DataVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.DataVerb.ProcessLine(System.String)">
            <summary>
            Processes a line of data from the client removing the escaping of the special end of message character.
            </summary>
            <param name="line">The line.</param>
            <returns>The line of data without escaping of the . character</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.EhloVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.EhloVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.EhloVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.HeloVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.HeloVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.HeloVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Verbs.IVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Verbs.IVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.IVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <summary>
            Processes a command which math
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection"/></param>
            <param name="command">The command<see cref="T:Rnwood.SmtpServer.SmtpCommand"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Rnwood.SmtpServer.Verbs.IVerbMap">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Verbs.IVerbMap" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.IVerbMap.GetVerbProcessor(System.String)">
            <summary>
            Gets the verb processor which is registered for the specified verb.
            </summary>
            <param name="verb">The verb.</param>
            <returns>The verb or null</returns>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.IVerbMap.SetVerbProcessor(System.String,Rnwood.SmtpServer.Verbs.IVerb)">
            <summary>
            Sets the verb processor which is registered for a verb.
            </summary>
            <param name="verb">The verb<see cref="T:System.String"/></param>
            <param name="verbProcessor">The verbProcessor<see cref="T:Rnwood.SmtpServer.Verbs.IVerb"/></param>
        </member>
        <member name="T:Rnwood.SmtpServer.Verbs.NoopVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Verbs.NoopVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.NoopVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Verbs.RsetVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Verbs.RsetVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.RsetVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Verbs.VerbMap">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Verbs.VerbMap" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.VerbMap.GetVerbProcessor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.VerbMap.SetVerbProcessor(System.String,Rnwood.SmtpServer.Verbs.IVerb)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.Verbs.VerbWithSubCommands">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.Verbs.VerbWithSubCommands" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.VerbWithSubCommands.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Verbs.VerbWithSubCommands"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.VerbWithSubCommands.#ctor(Rnwood.SmtpServer.Verbs.IVerbMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.Verbs.VerbWithSubCommands"/> class.
            </summary>
            <param name="subVerbMap">The subVerbMap<see cref="T:Rnwood.SmtpServer.Verbs.IVerbMap"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.Verbs.VerbWithSubCommands.SubVerbMap">
            <summary>
            Gets the SubVerbMap
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.Verbs.VerbWithSubCommands.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <summary>
            Dispatches a command to the registered sub command matching the next verb in the command
            or writes an error to the client is no match was found.
            </summary>
            <param name="connection">The connection<see cref="T:Rnwood.SmtpServer.IConnection" /></param>
            <param name="command">The command<see cref="T:Rnwood.SmtpServer.SmtpCommand" /></param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation
            </returns>
        </member>
        <member name="T:Rnwood.SmtpServer.MailFromVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.MailFromVerb" />
            </summary>
        </member>
        <member name="F:Rnwood.SmtpServer.MailFromVerb.currentDateTimeProvider">
            <summary>
            Defines the currentDateTimeProvider
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MailFromVerb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MailFromVerb"/> class.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MailFromVerb.#ctor(Rnwood.SmtpServer.ICurrentDateTimeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MailFromVerb"/> class.
            </summary>
            <param name="currentDateTimeProvider">The currentDateTimeProvider<see cref="T:Rnwood.SmtpServer.ICurrentDateTimeProvider"/></param>
        </member>
        <member name="P:Rnwood.SmtpServer.MailFromVerb.ParameterProcessorMap">
            <summary>
            Gets the ParameterProcessorMap
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MailFromVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.MailVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.MailVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MailVerb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.MailVerb"/> class.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MailVerb.FromSubVerb">
            <summary>
            Gets the FromSubVerb
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.MailVerb.SubVerbMap">
            <summary>
            Gets the SubVerbMap
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.MailVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.QuitVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.QuitVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.QuitVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.RcptToVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.RcptToVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.RcptToVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
        <member name="T:Rnwood.SmtpServer.RcptVerb">
            <summary>
            Defines the <see cref="T:Rnwood.SmtpServer.RcptVerb" />
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.RcptVerb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rnwood.SmtpServer.RcptVerb"/> class.
            </summary>
        </member>
        <member name="P:Rnwood.SmtpServer.RcptVerb.SubVerbMap">
            <summary>
            Gets the <see cref="T:Rnwood.SmtpServer.Verbs.VerbMap"/> for subcommands.
            </summary>
        </member>
        <member name="M:Rnwood.SmtpServer.RcptVerb.Process(Rnwood.SmtpServer.IConnection,Rnwood.SmtpServer.SmtpCommand)">
            <inheritdoc/>
        </member>
    </members>
</doc>
